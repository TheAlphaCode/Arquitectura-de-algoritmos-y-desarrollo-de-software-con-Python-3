import numpy as np
n = 3
# Hacer el array de numpy de tamano n x n+1 e inicializandolo a  
# cero para almacenar la matriz
a = np.zeros((n,n+1))
# Haciendo una matriz numpy de tamaño de n e inicializando
# a cero para almacenar el vector de solución
x = np.zeros(n) # --> x[n..]
# Lectura de los coeficientes de la matriz recordando que
# cada coeficientes viene determinado dentro del sistema de ecuaciones como:
#  x, y, z = c -> c = coeficiente
print('Ingrese los coeficientes de la matriz:')
for i in range(n):
    for j in range(n+1):
        a[i][j] = float(input('a['+str(i)+']['+ str(j)+']='))

# Aplicando metodo Gauss Jordan 
for i in range(n):
    if a[i][i] == 0.0:
        print('Division de ceros detectada!')
        
    for j in range(n):
        if i != j:
            ratio = a[j][i]/a[i][i]
            for k in range(n+1):
                a[j][k] = a[j][k] - ratio * a[i][k]
# Resultado e impresion de la solucion
print('\nLa solucion requerida es: ')
primer_coef, segundo_coef, tercer_coef = True, False, False

for i in range(n):
    # Obteniendo la solucion y almacenandolo en la matriz x[n...]
    x[i] = a[i][n]/a[i][i]    
    if primer_coef == True:
        print('X = ',(x[i]), end = '\t')
        primer_coef = False
        segundo_coef = True        
    elif segundo_coef == True:
        print('Y = ',(x[i]), end = '\t')
        segundo_coef = False
        tercer_coef = True        
    elif tercer_coef == True:
        print('Z = ',(x[i]), end = '\t')   
